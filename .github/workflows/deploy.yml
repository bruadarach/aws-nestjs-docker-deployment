name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Github Repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm ci

      - name: Create .env file
        run: |
          touch .env
          echo '${{ secrets.ENV }}' >> .env

      - name: Run Tests
        run: npm run test

      - name: Configure AWS credentials to access AWS resources
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image
        run: docker build -t linond-server .

      - name: Tag Docker Image
        run: docker tag linond-server ${{ steps.login-ecr.outputs.registry }}/linond-server:latest

      - name: Push Docker Image to ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/linond-server:latest

      #=== Deploy to EC2 using CodeDeploy by connecting S3, ECR, and EC2 (without direct SSH) ===#
      - name: Archive files
        run: tar -czvf $GITHUB_SHA.tar.gz appspec.yml scripts # CodeDeploy agent on EC2 runs appspec.yml

      - name: Upload project to S3
        run: aws s3 cp --region eu-west-2 ./$GITHUB_SHA.tar.gz s3://linond-server/$GITHUB_SHA.tar.gz

      - name: Deploy project to EC2 using CodeDeploy
        run: aws deploy create-deployment
          --application-name linond-server
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name Production
          --s3-location bucket=linond-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz

      #====== Alternative method: SSH into EC2 and pull Docker image from ECR ======#
      # - name: SSH into EC2
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.EC2_HOST }}
      #     username: ${{ secrets.EC2_USERNAME }}
      #     key: ${{ secrets.EC2_PRIVATE_KEY }}
      #     script_stop: true
      #     script: |
      #       docker stop linond-server || true
      #       docker rm linond-server || true
      #       docker pull ${{ steps.login-ecr.outputs.registry }}/linond-server:latest
      #       docker run -d --name linond-server -p 3000:3000 ${{ steps.login-ecr.outputs.registry }}/linond-server:latest

      #===== Alternative deployment using CodeDeploy, S3, and EC2 =====#
      # - name: Build Project
      #   run: npm run build

      # - name: Archive files
      #   run:
      #     | # Specify the files to compress; CodeDeploy agent runs appspec.yml
      #     tar -czvf $GITHUB_SHA.tar.gz appspec.yml scripts dist .env package.json package-lock.json

      # - name: Configure AWS credentials to access AWS resources
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-region: eu-west-2
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Upload project to S3
      #   run: aws s3 cp --region eu-west-2 ./$GITHUB_SHA.tar.gz s3://linond-server/$GITHUB_SHA.tar.gz

      # - name: Deploy project to EC2 using CodeDeploy
      #   run: |
      #     aws deploy create-deployment \
      #       --application-name linond-server \
      #       --deployment-config-name CodeDeployDefault.AllAtOnce \
      #       --deployment-group-name Production \
      #       --s3-location bucket=linond-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz
